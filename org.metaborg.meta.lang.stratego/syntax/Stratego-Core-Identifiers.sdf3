module Stratego-Core-Identifiers

imports
  Stratego-Core-Terms

sorts

  ModName ModNamePart

lexical syntax

  ModName = {ModNamePart "/"}+ 
  ModNamePart = [a-zA-Z\.\_] [a-zA-Z0-9\'\.\-\_]* 

lexical restrictions

  ModName -/- [a-zA-Z0-9\'\.\-\_]

lexical syntax

  ModName = "imports" {reject}
  ModName = "overlays" {reject}
  ModName = "rules" {reject}
  ModName = "signature" {reject}
  ModName = "strategies" {reject}

sorts

  Id LId LCID UCID Wld

lexical syntax

  Id = [a-zA-Z\_] [a-zA-Z0-9\'\-\_]* 
  LId = [a-zA-Z\_] [a-zA-Z0-9\'\-\_]* "*" 
  Id = [\'] [a-z]+ 
  LCID = [a-z] [a-zA-Z0-9\'\-\_]* 
  UCID = [A-Z] [a-zA-Z0-9\'\-\_]* 

lexical restrictions

  Id -/- [a-zA-Z0-9\'\_\*]
  Id -/- [\-].~[\>]
  LId -/- [a-zA-Z0-9\'\-\_]
  LCID -/- [a-zA-Z0-9\'\-\_]
  UCID -/- [a-zA-Z0-9\'\-\_]

lexical syntax

  Id = "_" {reject}
  Id = "'" {reject}
  Id = Keyword {reject}
  LId = Keyword {reject}
  LCID = Keyword {reject}
  UCID = Keyword {reject}

lexical restrictions

  "all"
  "case"
  "constructors"
  "else"
  "end"
  "external"
  "fail"
  "id"
  "if"
  "in"
  "imports"
  "let"
  "module"
  "not"
  "one"
  "overlays"
  "otherwise"
  "prim"
  "rec"
  "rules"
  "script"
  "signature"
  "some"
  "sorts"
  "strategies"
  "stratego"
  "switch"
  "test"
  "then"
  "where"
  "import-term" -/- [a-zA-Z0-9\'\-\_]

context-free restrictions

  Wld -/- [a-zA-Z0-9\'\-\_]

sorts

  Keyword

lexical syntax

  Keyword = "all" 
  Keyword = "constructors" 
  Keyword = "fail" 
  Keyword = "id" 
  Keyword = "in" 
  Keyword = "let" 
  Keyword = "module" 
  Keyword = "not" 
  Keyword = "one" 
  Keyword = "overlays" 
  Keyword = "prim" 
  Keyword = "rules" 
  Keyword = "script" 
  Keyword = "signature" 
  Keyword = "some" 
  Keyword = "sorts" 
  Keyword = "strategies" 
  Keyword = "stratego" 
  Keyword = "test" 
  Keyword = "where" 
  Keyword = "import-term" 
